{"version":3,"file":"component---src-pages-templates-project-tsx-9b1b9adbc9274b4f8970.js","mappings":"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","sources":["webpack://code-cave/./src/components/projects/carouselDotsButtonsArrows.tsx","webpack://code-cave/./src/components/projects/screenshotsCarousel.tsx","webpack://code-cave/./src/components/projects/projectDescriptionSection.tsx","webpack://code-cave/./src/components/projects/stackOrTeamCard.tsx","webpack://code-cave/./src/pagesTemplates/project.tsx"],"sourcesContent":["import React from \"react\";\n\nimport {\n  IDotButtonPropType,\n  IPrevNextButtonPropType,\n} from \"../../types/carousel.type\";\n\nexport const DotButton = ({ selected, onClick }: IDotButtonPropType) => {\n  return (\n    <button\n      aria-label=\"view image\"\n      className={\"bg-transparent touch-manipulation inline-flex w-12 h-12 flex items-center mx-3 after:bg-main-10 after:w-full after:h-1.5 after:content-['']\".concat(\n        selected ? \" after:bg-secondary-100\" : \"\"\n      )}\n      type=\"button\"\n      onClick={onClick}\n    />\n  );\n};\n\nexport const PrevButton = ({ enabled, onClick }: IPrevNextButtonPropType) => {\n  return (\n    <button\n      aria-label=\"previous image\"\n      className=\"bg-transparent touch-manipulation flex z-10 text-main-70 absolute flex items-center justify-center top-1/2 -translate-y-1/2 w-16 h-16 left-6 disabled:opacity-30\"\n      onClick={onClick}\n      disabled={!enabled}\n    >\n      <svg className=\"w-2/3 h-2/3\" viewBox=\"137.718 -1.001 366.563 644\">\n        <path\n          fill=\"#f9f9f9\"\n          d=\"M428.36 12.5c16.67-16.67 43.76-16.67 60.42 0 16.67 16.67 16.67 43.76 0 60.42L241.7 320c148.25 148.24 230.61 230.6 247.08 247.08 16.67 16.66 16.67 43.75 0 60.42-16.67 16.66-43.76 16.67-60.42 0-27.72-27.71-249.45-249.37-277.16-277.08a42.308 42.308 0 0 1-12.48-30.34c0-11.1 4.1-22.05 12.48-30.42C206.63 234.23 400.64 40.21 428.36 12.5z\"\n        />\n      </svg>\n    </button>\n  );\n};\n\nexport const NextButton = ({ enabled, onClick }: IPrevNextButtonPropType) => {\n  return (\n    <button\n      aria-label=\"next image\"\n      className=\"bg-transparent touch-manipulation flex z-10 text-main-70 absolute flex items-center justify-center top-1/2 -translate-y-1/2 w-16 h-16 right-6 disabled:opacity-30\"\n      onClick={onClick}\n      disabled={!enabled}\n    >\n      <svg className=\"w-2/3 h-2/3\" viewBox=\"0 0 238.003 238.003\">\n        <path\n          fill=\"#f9f9f9\"\n          d=\"M181.776 107.719L78.705 4.648c-6.198-6.198-16.273-6.198-22.47 0s-6.198 16.273 0 22.47l91.883 91.883-91.883 91.883c-6.198 6.198-6.198 16.273 0 22.47s16.273 6.198 22.47 0l103.071-103.039a15.741 15.741 0 0 0 4.64-11.283c0-4.13-1.526-8.199-4.64-11.313z\"\n        />\n      </svg>\n    </button>\n  );\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport useEmblaCarousel, { EmblaCarouselType } from \"embla-carousel-react\";\nimport Autoplay from \"embla-carousel-autoplay\";\n\nimport { IScreenshot } from \"../../types/project.type\";\n\nimport { DotButton, PrevButton, NextButton } from \"./carouselDotsButtonsArrows\";\n\nconst ScreenshotsCarousel = ({\n  screenshots,\n}: {\n  screenshots: IScreenshot[];\n}) => {\n  const [emblaRef, emblaApi] = useEmblaCarousel({ loop: true }, [\n    Autoplay({\n      stopOnInteraction: false,\n      stopOnMouseEnter: true,\n    }),\n  ]);\n  const [prevBtnEnabled, setPrevBtnEnabled] = useState(false);\n  const [nextBtnEnabled, setNextBtnEnabled] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [scrollSnaps, setScrollSnaps] = useState<number[]>([]);\n\n  const scrollPrev = useCallback(\n    () => emblaApi && emblaApi.scrollPrev(),\n    [emblaApi]\n  );\n  const scrollNext = useCallback(\n    () => emblaApi && emblaApi.scrollNext(),\n    [emblaApi]\n  );\n  const scrollTo = useCallback(\n    (index: number) => emblaApi && emblaApi.scrollTo(index),\n    [emblaApi]\n  );\n\n  const onInit = useCallback((emblaApi: EmblaCarouselType) => {\n    setScrollSnaps(emblaApi.scrollSnapList());\n  }, []);\n\n  const onSelect = useCallback((emblaApi: EmblaCarouselType) => {\n    setSelectedIndex(emblaApi.selectedScrollSnap());\n    setPrevBtnEnabled(emblaApi.canScrollPrev());\n    setNextBtnEnabled(emblaApi.canScrollNext());\n  }, []);\n\n  useEffect(() => {\n    if (!emblaApi) return;\n\n    onInit(emblaApi);\n    onSelect(emblaApi);\n    emblaApi.on(\"reInit\", onInit);\n    emblaApi.on(\"reInit\", onSelect);\n    emblaApi.on(\"select\", onSelect);\n  }, [emblaApi, onInit, onSelect]);\n\n  return (\n    <div className=\"h-full overflow-hidden relative\" ref={emblaRef}>\n      <div className=\"h-full flex items-center \">\n        {screenshots.map(({ id, childImageSharp }) => {\n          const img = getImage(childImageSharp);\n          return (\n            <div\n              key={id}\n              className=\"h-full shrink-0 min-w-0 basis-full px-24 py-8 cursor-pointer flex items-center justify-center\"\n            >\n              {img ? (\n                <GatsbyImage\n                  image={img}\n                  alt=\"logo\"\n                  className=\"object-contain rounded-xl max-h-[424px]\"\n                />\n              ) : null}\n            </div>\n          );\n        })}\n      </div>\n      <PrevButton onClick={scrollPrev} enabled={prevBtnEnabled} />\n      <NextButton onClick={scrollNext} enabled={nextBtnEnabled} />\n\n      <div className=\"z-10 absolute bottom-1 left-0 right-0 flex justify-center items-center\">\n        {scrollSnaps.map((_, index) => (\n          <DotButton\n            key={index}\n            selected={index === selectedIndex}\n            onClick={() => scrollTo(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ScreenshotsCarousel;\n","import React, { HTMLAttributes } from \"react\";\n\ninterface IProjectDescriptionSectionProps\n  extends HTMLAttributes<HTMLDivElement> {\n  title: string;\n  className?: string;\n  text?: string;\n  textAttr?: HTMLAttributes<HTMLParagraphElement>;\n}\n\nconst ProjectDescriptionSection = ({\n  title,\n  text,\n  className,\n  children,\n  textAttr,\n  ...attr\n}: React.PropsWithChildren<IProjectDescriptionSectionProps>) => {\n  return (\n    <section {...attr} className=\"w-full\">\n      <h2 className=\"text-4xl text-secondary-100 uppercase w-full max-w-[320px] mb-2\">\n        {title}\n      </h2>\n      {!!textAttr?.dangerouslySetInnerHTML ? (\n        <p\n          {...textAttr}\n          className={`text-lg w-full max-w-[544px] float-right ${className}`}\n        />\n      ) : (\n        <p\n          {...textAttr}\n          className={`text-lg w-full max-w-[544px] float-right ${className}`}\n        >\n          {children ? children : text}\n        </p>\n      )}\n    </section>\n  );\n};\n\nexport default ProjectDescriptionSection;\n","import React from \"react\";\n\ninterface IStackOrTeamCardProps\n  extends React.HTMLAttributes<HTMLParagraphElement> {\n  text: string;\n}\n\nconst StackOrTeamCard = ({ text, ...attr }: IStackOrTeamCardProps) => {\n  return (\n    <p\n      {...attr}\n      className=\"bg-main-70 px-5 h-16 whitespace-nowrap text-lg font-medium rounded-lg flex items-center\"\n    >\n      {text}\n    </p>\n  );\n};\n\nexport default StackOrTeamCard;\n","import React from \"react\";\nimport { HeadFC, PageProps, graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport {\n  IProjectQueryResult,\n  IProjectsPageContext,\n} from \"../types/project.type\";\n\nimport ContentContainer from \"../components/common/contentContainer\";\nimport ScreenshotsCarousel from \"../components/projects/screenshotsCarousel\";\nimport { HeadSeo, LocalBusinessMetadata } from \"../components/common/metadata\";\nimport ProjectDescriptionSection from \"../components/projects/projectDescriptionSection\";\nimport StackOrTeamCard from \"../components/projects/stackOrTeamCard\";\n\nconst Project = ({\n  data: {\n    markdownRemark: { frontmatter, html },\n  },\n  pageContext: { markupData, lang },\n}: PageProps<IProjectQueryResult, IProjectsPageContext>) => {\n  const {\n    title,\n    description,\n    challenge,\n    clientDescription,\n    team,\n    screenshots,\n    stack,\n  } = frontmatter;\n  const logo = getImage(frontmatter.logo);\n\n  return (\n    <div\n      itemScope\n      itemType=\"https://schema.org/CreativeWork\"\n      className=\"flex bg-main-100\"\n    >\n      <ContentContainer\n        maxWidthClass=\"max-w-4.5xl\"\n        className=\"flex-col text-secondary-70 py-16 !px-0 gap-8\"\n      >\n        <div className=\"flex justify-between gap-x-16 gap-y-2.5 pb-10 gradient-border border-b border-solid\">\n          <div className=\"flex-1 w-full max-w-[528px]\">\n            <h1\n              itemProp=\"name\"\n              className=\"w-full text-4xl font-semibold text-secondary-100 mb-5 uppercase\"\n            >\n              {title}\n            </h1>\n            <p itemProp=\"description\" className=\"w-full text-base font-light\">\n              {description}\n            </p>\n          </div>\n\n          {logo ? (\n            <div className=\"w-48 h-48 flex items-center justify-center\">\n              <GatsbyImage\n                image={logo}\n                imgStyle={{ objectFit: `contain` }}\n                alt=\"logo\"\n                itemProp=\"image\"\n                className=\"max-h-full max-w-full\"\n              />\n            </div>\n          ) : null}\n        </div>\n\n        <ProjectDescriptionSection\n          title={markupData.clientSectionTitle}\n          text={clientDescription}\n          itemProp=\"sourceOrganization\"\n          itemScope\n          itemType=\"https://schema.org/Organization\"\n          textAttr={{\n            itemProp: \"description\",\n          }}\n        />\n\n        <ProjectDescriptionSection\n          title={markupData.challengeSectionTitle}\n          text={challenge}\n          textAttr={{\n            itemProp: \"about\",\n          }}\n        />\n\n        {html ? (\n          <ProjectDescriptionSection\n            title={markupData.solutionSectionTitle}\n            text={challenge}\n            textAttr={{\n              itemProp: \"articleBody\",\n              dangerouslySetInnerHTML: { __html: html },\n            }}\n          />\n        ) : null}\n\n        {team?.length ? (\n          <ProjectDescriptionSection\n            title={markupData.teamSectionTitle}\n            className=\"flex gap-2.5 flex-wrap\"\n          >\n            {team.map((member) => (\n              <StackOrTeamCard\n                id={member}\n                text={member}\n                itemProp=\"contributor\"\n              />\n            ))}\n          </ProjectDescriptionSection>\n        ) : null}\n\n        {stack?.length ? (\n          <ProjectDescriptionSection\n            title={markupData.techSectionTitle}\n            className=\"flex gap-2.5 flex-wrap\"\n          >\n            {stack.map((tech) => (\n              <StackOrTeamCard id={tech} text={tech} itemProp=\"keywords\" />\n            ))}\n          </ProjectDescriptionSection>\n        ) : null}\n\n        {screenshots?.length ? (\n          <section className=\"w-full mb-8\">\n            <h2 className=\"text-4xl text-secondary-100 uppercase w-full max-w-[320px]\">\n              {markupData.resultSectionTitle}\n            </h2>\n            <ScreenshotsCarousel screenshots={screenshots} />\n          </section>\n        ) : null}\n        <LocalBusinessMetadata itemProp=\"author\" lang={lang} />\n      </ContentContainer>\n    </div>\n  );\n};\n\nexport default Project;\n\nexport const Head: HeadFC<IProjectQueryResult, IProjectsPageContext> = ({\n  data: {\n    markdownRemark: {\n      frontmatter: { title, cover },\n    },\n  },\n  pageContext,\n  location,\n}) => {\n  const coverImg = getImage(cover);\n\n  return (\n    <HeadSeo\n      title={`${pageContext.markupData.head} | ${title.toUpperCase()}`}\n      siteUrl={pageContext.site.siteUrl}\n      path={location.pathname}\n      img={coverImg?.images.fallback?.src}\n      lang={pageContext.lang}\n    />\n  );\n};\n\nexport const query = graphql`\n  query ($id: String) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        stack\n        title\n        description\n        challenge\n        clientDescription\n        logo {\n          childImageSharp {\n            gatsbyImageData(\n              formats: [AUTO, WEBP, AVIF]\n              placeholder: BLURRED\n              width: 180\n            )\n          }\n        }\n        cover {\n          childImageSharp {\n            gatsbyImageData(\n              formats: [AUTO, WEBP, AVIF]\n              placeholder: BLURRED\n              height: 400\n            )\n          }\n        }\n        team\n        screenshots {\n          id\n          childImageSharp {\n            gatsbyImageData(\n              formats: [AUTO, WEBP, AVIF]\n              placeholder: BLURRED\n              height: 424\n            )\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["DotButton","_ref","selected","onClick","React","className","concat","type","PrevButton","_ref2","enabled","disabled","viewBox","fill","d","NextButton","_ref3","screenshots","emblaRef","emblaApi","useEmblaCarousel","loop","Autoplay","stopOnInteraction","stopOnMouseEnter","prevBtnEnabled","setPrevBtnEnabled","useState","nextBtnEnabled","setNextBtnEnabled","selectedIndex","setSelectedIndex","scrollSnaps","setScrollSnaps","scrollPrev","useCallback","scrollNext","scrollTo","index","onInit","scrollSnapList","onSelect","selectedScrollSnap","canScrollPrev","canScrollNext","useEffect","on","ref","map","id","childImageSharp","img","getImage","key","GatsbyImage","image","alt","_","title","text","children","textAttr","attr","Object","assign","dangerouslySetInnerHTML","data","markdownRemark","frontmatter","html","pageContext","markupData","lang","description","challenge","clientDescription","team","stack","logo","itemScope","itemType","ContentContainer","maxWidthClass","itemProp","imgStyle","objectFit","ProjectDescriptionSection","clientSectionTitle","challengeSectionTitle","solutionSectionTitle","__html","length","teamSectionTitle","member","StackOrTeamCard","techSectionTitle","tech","resultSectionTitle","ScreenshotsCarousel","LocalBusinessMetadata","Head","_coverImg$images$fall","cover","location","coverImg","HeadSeo","head","toUpperCase","siteUrl","site","path","pathname","images","fallback","src"],"sourceRoot":""}