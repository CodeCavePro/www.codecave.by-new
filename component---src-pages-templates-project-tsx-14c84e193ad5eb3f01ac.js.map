{"version":3,"file":"component---src-pages-templates-project-tsx-14c84e193ad5eb3f01ac.js","mappings":"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","sources":["webpack://code-cave/./src/components/common/templateSection.tsx","webpack://code-cave/./src/components/projects/projectsSection.tsx","webpack://code-cave/./src/components/projects/carouselDotsButtonsArrows.tsx","webpack://code-cave/./src/components/projects/screenshotsCarousel.tsx","webpack://code-cave/./src/pagesTemplates/project.tsx"],"sourcesContent":["import React, { PropsWithChildren } from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Border from \"../../assets/common/border.svg\";\n\nimport ContentContainer from \"./contentContainer\";\n\ninterface ITemplateSectionProps extends React.HTMLAttributes<HTMLElement> {\n  title: string;\n  theme: \"dark\" | \"light\";\n  isArrowLink?: boolean;\n  linkTitle?: string;\n  section?: string;\n  className?: string;\n  borderT?: boolean;\n  borderB?: boolean;\n}\n\nconst TemplateSection = ({\n  section,\n  theme,\n  title,\n  linkTitle,\n  className,\n  children,\n  borderT,\n  borderB,\n  isArrowLink = true,\n  ...attr\n}: PropsWithChildren<ITemplateSectionProps>) => {\n  const mainColorClass =\n    theme === \"dark\" ? \"text-secondary-100\" : \"text-main-100\";\n  const linkColorClass =\n    theme === \"dark\"\n      ? \"text-secondary-100 hover:text-secondary-70\"\n      : \"text-main-100 hover:text-main-10\";\n  const bgColorClass = theme === \"dark\" ? \"bg-main-100\" : \"text-secondary-100\";\n\n  return (\n    <>\n      {borderT ? <Border className=\"w-full\" /> : null}\n      <section\n        className={`w-full py-16 ${bgColorClass} ${className}`}\n        {...attr}\n      >\n        <ContentContainer className={`flex-col items-center ${mainColorClass}`}>\n          <div className=\"flex justify-between w-full items-center pb-8 sm:pb-14 flex-col sm:flex-row gap-5\">\n            <h2 className={`text-4xl font-bold w-full ${mainColorClass}`}>\n              {title.toUpperCase()}\n            </h2>\n            {section ? (\n              <Link\n                to={`/${section}`}\n                className={`w-full sm:w-auto text-start sm:text-end text-xl font-normal cursor-pointer whitespace-nowrap ${linkColorClass}`}\n              >\n                {linkTitle ? linkTitle.toUpperCase() : \"DISCOVER MORE\"}{\" \"}\n                {isArrowLink ? <>&#8594;</> : null}\n              </Link>\n            ) : null}\n          </div>\n          {children}\n        </ContentContainer>\n      </section>\n      {borderB ? <Border className=\"w-full\" /> : null}\n    </>\n  );\n};\n\nexport default TemplateSection;\n","import React from \"react\";\n\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport {\n  IProjectPreviewQueryResult,\n  IProjectSectionQueryResult,\n} from \"../../types/project.type\";\n\nimport ProjectPreview from \"./projectPreview\";\nimport TemplateSection from \"../common/templateSection\";\nimport { ILang } from \"../../types/common.type\";\n\ninterface IProjectsSectionProps extends ILang {\n  excludeId?: string;\n}\n\nconst ProjectsSection = ({ excludeId, lang }: IProjectsSectionProps) => {\n  const projectsPreviewData = useStaticQuery(\n    query\n  ) as IProjectSectionQueryResult;\n\n  const sectionMarkup = projectsPreviewData?.markupData?.nodes?.find(\n    (node) => node.fields.language === lang\n  )?.frontmatter?.projects;\n\n  let projects: IProjectPreviewQueryResult[] | null | undefined;\n  if (lang in projectsPreviewData)\n    projects = projectsPreviewData?.[lang]?.nodes as\n      | IProjectPreviewQueryResult[]\n      | null\n      | undefined;\n  else projects = projectsPreviewData.en?.nodes;\n\n  if (!projects) return <></>;\n\n  if (excludeId) {\n    projects = projects.filter((project) => project.id !== excludeId);\n  }\n\n  return (\n    <TemplateSection\n      theme=\"dark\"\n      section=\"projects\"\n      title={sectionMarkup?.moreProjectsSectionTitle ?? \"OUR PROJECTS\"}\n      linkTitle={sectionMarkup?.moreProjectsSectionLinkTitle ?? \"Discover MORE\"}\n      borderB\n    >\n      <div className=\"flex justify-between items-center gap-5 lg:gap-10 flex-col sm:flex-row items-stretch\">\n        {projects.map((project, i) => {\n          if (i === 3) return;\n          return (\n            <ProjectPreview\n              key={project.id}\n              project={project}\n              lang={lang}\n              theme=\"light\"\n              className=\"flex-1 sm:last:hidden lg:last:flex\"\n            />\n          );\n        })}\n      </div>\n    </TemplateSection>\n  );\n};\n\nexport default ProjectsSection;\n\nexport const query = graphql`\n  {\n    en: allMarkdownRemark(\n      filter: {\n        fields: { sourceName: { eq: \"projects\" }, language: { eq: \"en\" } }\n      }\n      sort: { frontmatter: { date: DESC } }\n      limit: 4\n    ) {\n      nodes {\n        id\n        frontmatter {\n          title\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                width: 600\n                formats: [AUTO, WEBP, AVIF]\n                placeholder: BLURRED\n              )\n            }\n          }\n        }\n      }\n    }\n    ru: allMarkdownRemark(\n      filter: {\n        fields: { sourceName: { eq: \"projects\" }, language: { eq: \"ru\" } }\n      }\n      sort: { frontmatter: { date: DESC } }\n      limit: 4\n    ) {\n      nodes {\n        id\n        frontmatter {\n          title\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                width: 600\n                formats: [AUTO, WEBP, AVIF]\n                placeholder: BLURRED\n              )\n            }\n          }\n        }\n      }\n    }\n    markupData: allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"common\" } } }\n      sort: { frontmatter: { order: ASC } }\n    ) {\n      nodes {\n        fields {\n          language\n        }\n        frontmatter {\n          projects {\n            moreProjectsSectionTitle\n            moreProjectsSectionLinkTitle\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nimport {\n  IDotButtonPropType,\n  IPrevNextButtonPropType,\n} from \"../../types/carousel.type\";\n\nexport const DotButton = ({ selected, onClick }: IDotButtonPropType) => {\n  return (\n    <button\n      aria-label=\"view image\"\n      className={\"bg-transparent touch-manipulation inline-flex w-12 h-12 flex items-center mx-3 after:bg-main-10 after:w-full after:h-1.5 after:content-['']\".concat(\n        selected ? \" after:bg-main-100\" : \"\"\n      )}\n      type=\"button\"\n      onClick={onClick}\n    />\n  );\n};\n\nexport const PrevButton = ({ enabled, onClick }: IPrevNextButtonPropType) => {\n  return (\n    <button\n      aria-label=\"previous image\"\n      className=\"bg-transparent touch-manipulation flex z-10 text-main-70 absolute flex items-center justify-center top-1/2 -translate-y-1/2 w-16 h-16 left-6 disabled:opacity-30\"\n      onClick={onClick}\n      disabled={!enabled}\n    >\n      <svg className=\"w-2/3 h-2/3\" viewBox=\"137.718 -1.001 366.563 644\">\n        <path\n          fill=\"currentColor\"\n          d=\"M428.36 12.5c16.67-16.67 43.76-16.67 60.42 0 16.67 16.67 16.67 43.76 0 60.42L241.7 320c148.25 148.24 230.61 230.6 247.08 247.08 16.67 16.66 16.67 43.75 0 60.42-16.67 16.66-43.76 16.67-60.42 0-27.72-27.71-249.45-249.37-277.16-277.08a42.308 42.308 0 0 1-12.48-30.34c0-11.1 4.1-22.05 12.48-30.42C206.63 234.23 400.64 40.21 428.36 12.5z\"\n        />\n      </svg>\n    </button>\n  );\n};\n\nexport const NextButton = ({ enabled, onClick }: IPrevNextButtonPropType) => {\n  return (\n    <button\n      aria-label=\"next image\"\n      className=\"bg-transparent touch-manipulation flex z-10 text-main-70 absolute flex items-center justify-center top-1/2 -translate-y-1/2 w-16 h-16 right-6 disabled:opacity-30\"\n      onClick={onClick}\n      disabled={!enabled}\n    >\n      <svg className=\"w-2/3 h-2/3\" viewBox=\"0 0 238.003 238.003\">\n        <path\n          fill=\"currentColor\"\n          d=\"M181.776 107.719L78.705 4.648c-6.198-6.198-16.273-6.198-22.47 0s-6.198 16.273 0 22.47l91.883 91.883-91.883 91.883c-6.198 6.198-6.198 16.273 0 22.47s16.273 6.198 22.47 0l103.071-103.039a15.741 15.741 0 0 0 4.64-11.283c0-4.13-1.526-8.199-4.64-11.313z\"\n        />\n      </svg>\n    </button>\n  );\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport useEmblaCarousel, { EmblaCarouselType } from \"embla-carousel-react\";\nimport Autoplay from \"embla-carousel-autoplay\";\n\nimport { IScreenshot } from \"../../types/project.type\";\n\nimport { DotButton, PrevButton, NextButton } from \"./carouselDotsButtonsArrows\";\n\nconst ScreenshotsCarousel = ({\n  screenshots,\n}: {\n  screenshots: IScreenshot[];\n}) => {\n  const [emblaRef, emblaApi] = useEmblaCarousel({ loop: true }, [\n    Autoplay({\n      stopOnInteraction: false,\n      stopOnMouseEnter: true,\n    }),\n  ]);\n  const [prevBtnEnabled, setPrevBtnEnabled] = useState(false);\n  const [nextBtnEnabled, setNextBtnEnabled] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [scrollSnaps, setScrollSnaps] = useState<number[]>([]);\n\n  const scrollPrev = useCallback(\n    () => emblaApi && emblaApi.scrollPrev(),\n    [emblaApi]\n  );\n  const scrollNext = useCallback(\n    () => emblaApi && emblaApi.scrollNext(),\n    [emblaApi]\n  );\n  const scrollTo = useCallback(\n    (index: number) => emblaApi && emblaApi.scrollTo(index),\n    [emblaApi]\n  );\n\n  const onInit = useCallback((emblaApi: EmblaCarouselType) => {\n    setScrollSnaps(emblaApi.scrollSnapList());\n  }, []);\n\n  const onSelect = useCallback((emblaApi: EmblaCarouselType) => {\n    setSelectedIndex(emblaApi.selectedScrollSnap());\n    setPrevBtnEnabled(emblaApi.canScrollPrev());\n    setNextBtnEnabled(emblaApi.canScrollNext());\n  }, []);\n\n  useEffect(() => {\n    if (!emblaApi) return;\n\n    onInit(emblaApi);\n    onSelect(emblaApi);\n    emblaApi.on(\"reInit\", onInit);\n    emblaApi.on(\"reInit\", onSelect);\n    emblaApi.on(\"select\", onSelect);\n  }, [emblaApi, onInit, onSelect]);\n\n  return (\n    <div className=\"h-full overflow-hidden relative\" ref={emblaRef}>\n      <div className=\"h-full flex items-center \">\n        {screenshots.map(({ id, childImageSharp }) => {\n          const img = getImage(childImageSharp);\n          return (\n            <div\n              key={id}\n              className=\"h-full shrink-0 min-w-0 basis-full p-12 cursor-pointer flex items-center justify-center\"\n            >\n              {img ? <GatsbyImage image={img} alt=\"logo\" /> : null}\n            </div>\n          );\n        })}\n      </div>\n      <PrevButton onClick={scrollPrev} enabled={prevBtnEnabled} />\n      <NextButton onClick={scrollNext} enabled={nextBtnEnabled} />\n\n      <div className=\"z-10 absolute bottom-1 left-0 right-0 flex justify-center items-center\">\n        {scrollSnaps.map((_, index) => (\n          <DotButton\n            key={index}\n            selected={index === selectedIndex}\n            onClick={() => scrollTo(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ScreenshotsCarousel;\n","import React from \"react\";\n\nimport { HeadFC, PageProps, graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport {\n  IProjectQueryResult,\n  IProjectsPageContext,\n} from \"../types/project.type\";\n\nimport ContentContainer from \"../components/common/contentContainer\";\nimport ProjectsSection from \"../components/projects/projectsSection\";\nimport ScreenshotsCarousel from \"../components/projects/screenshotsCarousel\";\nimport { HeadSeo, LocalBusinessMetadata } from \"../components/common/metadata\";\n\nconst Project = ({\n  data: {\n    markdownRemark: { frontmatter, id, html },\n  },\n  pageContext: { markupData, lang },\n}: PageProps<IProjectQueryResult, IProjectsPageContext>) => {\n  const {\n    title,\n    challenge,\n    client,\n    clientDescription,\n    team,\n    screenshots,\n    stack,\n  } = frontmatter;\n  const cover = getImage(frontmatter.cover);\n  const clientLogo = getImage(frontmatter.clientLogo);\n\n  return (\n    <div itemScope itemType=\"https://schema.org/CreativeWork\">\n      {/* BANNER */}\n      <div\n        className={`w-full bg-secondary-70 min-h-96 flex flex-wrap p-5 md:px-40 justify-evenly items-center`}\n      >\n        <h2\n          className=\"text-bold text-5xl text-main-100 mb-8 grow-1 basis-full lg:basis-1/2 xl:basis-1/3\"\n          itemProp=\"description\"\n        >\n          {title}\n        </h2>\n        {cover ? (\n          <GatsbyImage\n            image={cover}\n            alt=\"cover\"\n            className=\"h-full object-cover\"\n            itemProp=\"image\"\n          />\n        ) : null}\n      </div>\n\n      {/* CLIENT */}\n      {client ? (\n        <section className=\"w-full bg-secondary-100 text-main-100 py-20\">\n          <ContentContainer className=\"flex-col items-center\">\n            <h3 className=\"text-5xl font-bold pb-6 md:pb-10\">\n              {markupData.clientSectionTitle}\n            </h3>\n\n            <div\n              className=\"flex flex-wrap justify-evenly w-full items-center\"\n              itemProp=\"sourceOrganization\"\n              itemScope\n              itemType=\"https://schema.org/Organization\"\n            >\n              <div className=\"grow-1 basis-full lg:basis-1/2 xl:basis-1/3\">\n                {clientLogo ? (\n                  <GatsbyImage\n                    image={clientLogo}\n                    alt=\"client logo\"\n                    className=\"grayscale\"\n                    itemProp=\"logo\"\n                  />\n                ) : null}\n              </div>\n              <p\n                className=\"basis-full lg:basis-1/2 xl:basis-2/3 text-xl\"\n                itemProp=\"description\"\n              >\n                {clientDescription}\n              </p>\n            </div>\n          </ContentContainer>\n        </section>\n      ) : null}\n\n      {/* CHALLENGE */}\n      {challenge?.length ? (\n        <section className=\"w-full bg-main-100 text-secondary-100 py-20\">\n          <ContentContainer className=\"flex-col items-center\">\n            <h3 className=\"text-5xl font-bold pb-6 md:pb-10\">\n              {markupData.challengeSectionTitle}\n            </h3>\n\n            <ul className=\"text-2xl leading-7 md:leading-10\">\n              {challenge.map((challenge, i) => (\n                <li key={i} className=\"list-inside list-disc\" itemProp=\"about\">\n                  {challenge}\n                </li>\n              ))}\n            </ul>\n          </ContentContainer>\n        </section>\n      ) : null}\n\n      {/* SOLUTION */}\n      <section className=\"w-full bg-secondary-100 text-main-100 py-20 border-b-2 border-secondary-30 border-solid\">\n        <ContentContainer className=\"flex-col items-center\">\n          <h3 className=\"text-5xl font-bold pb-6 md:pb-10\">\n            {markupData.solutionSectionTitle}\n          </h3>\n\n          {html ? (\n            <div\n              className=\"text-xl indent-12\"\n              dangerouslySetInnerHTML={{ __html: html }}\n              itemProp=\"articleBody\"\n            />\n          ) : null}\n\n          {/* team */}\n          <h3 className=\"text-4xl font-bold pt-6 md:pt-10\">\n            {markupData.teamSectionTitle}\n          </h3>\n          {team?.length ? (\n            <div className=\"flex flex-wrap justify-center w-full items-center\">\n              {team.map((member) => (\n                <div\n                  key={member}\n                  className=\"team-member w-56 h-36 border-2 border-solid border-secondary-30 m-4 p-4 text-2xl flex justify-center items-center relative transition-all duration-500 hover:text-secondary-100\"\n                >\n                  <p className=\"w-40 text-center z-[1]\" itemProp=\"contributor\">\n                    {member}\n                  </p>\n                  <div\n                    className={`line w-0 h-full bg-main-100 absolute top-1/2 right-0 -translate-y-1/2 transition-all duration-500`}\n                  ></div>\n                </div>\n              ))}\n            </div>\n          ) : null}\n\n          {/* stack */}\n          <h3 className=\"text-4xl font-bold pt-6 md:pt-10\">\n            {markupData.techSectionTitle}\n          </h3>\n          <div className=\"flex flex-wrap justify-center w-full items-center\">\n            {stack.map((tech) => (\n              <div\n                key={tech}\n                className=\"applied-tech w-56 h-36 border-2 border-solid border-secondary-30 m-4 p-4 text-2xl flex justify-center items-center relative\"\n              >\n                <p className=\"w-40 text-center\" itemProp=\"keywords\">\n                  {tech}\n                </p>\n                <div\n                  className={`line w-1 h-0 bg-main-100 absolute top-1/2 right-0 -translate-y-1/2 transition-all duration-500`}\n                />\n              </div>\n            ))}\n          </div>\n        </ContentContainer>\n      </section>\n\n      {/* RESULT */}\n      {screenshots?.length ? (\n        <section className=\"w-full bg-secondary-100 text-main-100 py-20\">\n          <ContentContainer className=\"flex-col items-center\">\n            <h3 className=\"text-5xl font-bold pb-6 md:pb-10\">\n              {markupData.resultSectionTitle}\n            </h3>\n\n            <ScreenshotsCarousel screenshots={screenshots} />\n          </ContentContainer>\n        </section>\n      ) : null}\n\n      <ProjectsSection lang={lang} excludeId={id} />\n      <LocalBusinessMetadata itemProp=\"author\" lang={lang} />\n    </div>\n  );\n};\n\nexport default Project;\n\nexport const Head: HeadFC<IProjectQueryResult, IProjectsPageContext> = ({\n  data: {\n    markdownRemark: {\n      frontmatter: { title, cover },\n    },\n  },\n  pageContext,\n  location,\n}) => {\n  const coverImg = getImage(cover);\n\n  return (\n    <HeadSeo\n      title={`${pageContext.markupData.head} | ${title.toUpperCase()}`}\n      siteUrl={pageContext.site.siteUrl}\n      path={location.pathname}\n      img={coverImg?.images.fallback?.src}\n      lang={pageContext.lang}\n    />\n  );\n};\n\nexport const query = graphql`\n  query ($id: String) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        stack\n        title\n        challenge\n        client\n        clientDescription\n        clientLogo {\n          childImageSharp {\n            gatsbyImageData(\n              formats: [AUTO, WEBP, AVIF]\n              placeholder: BLURRED\n              height: 150\n            )\n          }\n        }\n        cover {\n          childImageSharp {\n            gatsbyImageData(\n              formats: [AUTO, WEBP, AVIF]\n              placeholder: BLURRED\n              height: 400\n            )\n          }\n        }\n        team\n        screenshots {\n          id\n          childImageSharp {\n            gatsbyImageData(\n              formats: [AUTO, WEBP, AVIF]\n              placeholder: BLURRED\n              height: 600\n            )\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","section","theme","title","linkTitle","className","children","borderT","borderB","isArrowLink","attr","mainColorClass","linkColorClass","bgColorClass","React","Border","Object","assign","ContentContainer","toUpperCase","Link","to","_projectsPreviewData$","_projectsPreviewData$2","_projectsPreviewData$3","_projectsPreviewData$4","_projectsPreviewData$5","_projectsPreviewData$6","_sectionMarkup$morePr","_sectionMarkup$morePr2","excludeId","lang","projectsPreviewData","useStaticQuery","query","sectionMarkup","markupData","nodes","find","node","fields","language","frontmatter","projects","en","filter","project","id","TemplateSection","moreProjectsSectionTitle","moreProjectsSectionLinkTitle","map","i","ProjectPreview","key","DotButton","selected","onClick","concat","type","PrevButton","_ref2","enabled","disabled","viewBox","fill","d","NextButton","_ref3","screenshots","emblaRef","emblaApi","useEmblaCarousel","loop","Autoplay","stopOnInteraction","stopOnMouseEnter","prevBtnEnabled","setPrevBtnEnabled","useState","nextBtnEnabled","setNextBtnEnabled","selectedIndex","setSelectedIndex","scrollSnaps","setScrollSnaps","scrollPrev","useCallback","scrollNext","scrollTo","index","onInit","scrollSnapList","onSelect","selectedScrollSnap","canScrollPrev","canScrollNext","useEffect","on","ref","childImageSharp","img","getImage","GatsbyImage","image","alt","_","data","markdownRemark","html","pageContext","challenge","client","clientDescription","team","stack","cover","clientLogo","itemScope","itemType","itemProp","clientSectionTitle","length","challengeSectionTitle","solutionSectionTitle","dangerouslySetInnerHTML","__html","teamSectionTitle","member","techSectionTitle","tech","resultSectionTitle","ScreenshotsCarousel","ProjectsSection","LocalBusinessMetadata","Head","_coverImg$images$fall","location","coverImg","HeadSeo","head","siteUrl","site","path","pathname","images","fallback","src"],"sourceRoot":""}